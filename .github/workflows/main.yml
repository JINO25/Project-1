name: CI Pipeline

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main, production ]

jobs:
  node-test:
    name: üîß Node.js Unit Test
    runs-on: ubuntu-latest

    env:
      NODE_ENV: ${{ secrets.NODE_ENV }}
      PORT: ${{ secrets.PORT }}
      LIMITPAGE: ${{ secrets.LIMITPAGE }}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      DATABASE: ${{ secrets.DATABASE }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_EXPIRIES: ${{ secrets.JWT_EXPIRIES }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      S_EMAIL: ${{ secrets.S_EMAIL }}
      S_PASS: ${{ secrets.S_PASS }}
      API_KEY: ${{ secrets.API_KEY }}
      SENDINBLUE_HOST: ${{ secrets.SENDINBLUE_HOST }}
      SENDINBLUE_PORT: ${{ secrets.SENDINBLUE_PORT }}
      SENDINBLUE_LOGIN: ${{ secrets.SENDINBLUE_LOGIN }}
      SENDINBLUE_PASSWORD: ${{ secrets.SENDINBLUE_PASSWORD }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
      GgClient_ID: ${{ secrets.GgClient_ID }}
      GgClient_Secret: ${{ secrets.GgClient_Secret }}
      Cloudinary_NAME: ${{ secrets.Cloudinary_NAME }}
      Cloudinary_API: ${{ secrets.Cloudinary_API }}
      Cloudinary_SECRET: ${{ secrets.Cloudinary_SECRET }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project (n·∫øu c√≥)
        run: npm run build --if-present

      - name: ‚úÖ Run tests (n·∫øu c√≥ test script)
        run: npm run test --if-present

  docker-build-test:
    runs-on: ubuntu-latest
    needs: node-test
    env:
        NODE_ENV: ${{ secrets.NODE_ENV }}
        PORT: ${{ secrets.PORT }}
        LIMITPAGE: ${{ secrets.LIMITPAGE }}  
        PASSWORD: ${{ secrets.PASSWORD }}
        USERNAME: ${{ secrets.USERNAME }}
        DATABASE: ${{ secrets.DATABASE }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        JWT_EXPIRIES: ${{ secrets.JWT_EXPIRIES }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}      
        S_EMAIL: ${{ secrets.S_EMAIL }}
        S_PASS: ${{ secrets.S_PASS }}
        API_KEY: ${{ secrets.API_KEY }}
        SENDINBLUE_HOST: ${{ secrets.SENDINBLUE_HOST }}
        SENDINBLUE_PORT: ${{ secrets.SENDINBLUE_PORT }}
        SENDINBLUE_LOGIN: ${{ secrets.SENDINBLUE_LOGIN }}
        SENDINBLUE_PASSWORD: ${{ secrets.SENDINBLUE_PASSWORD }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
        GgClient_ID: ${{ secrets.GgClient_ID }}
        GgClient_Secret: ${{ secrets.GgClient_Secret }}
        Cloudinary_NAME: ${{ secrets.Cloudinary_NAME }}
        Cloudinary_API: ${{ secrets.Cloudinary_API }}
        Cloudinary_SECRET: ${{ secrets.Cloudinary_SECRET }}
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: username/docker-study:latest

      - name: Run Docker container
        run: |
          docker run --rm \
            -e NODE_ENV="$NODE_ENV" \
            -e PORT="$PORT" \
            -e LIMITPAGE="$LIMITPAGE" \
            -e PASSWORD="$PASSWORD" \
            -e USERNAME="$USERNAME" \
            -e DATABASE="$DATABASE" \
            -e JWT_SECRET_KEY="$JWT_SECRET_KEY" \
            -e JWT_EXPIRIES="$JWT_EXPIRIES" \
            -e SESSION_SECRET="$SESSION_SECRET" \
            -e EMAIL_USERNAME="$EMAIL_USERNAME" \
            -e EMAIL_PASSWORD="$EMAIL_PASSWORD" \
            -e EMAIL_HOST="$EMAIL_HOST" \
            -e EMAIL_PORT="$EMAIL_PORT" \
            -e EMAIL_FROM="$EMAIL_FROM" \
            -e S_EMAIL="$S_EMAIL" \
            -e S_PASS="$S_PASS" \
            -e API_KEY="$API_KEY" \
            -e SENDINBLUE_HOST="$SENDINBLUE_HOST" \
            -e SENDINBLUE_PORT="$SENDINBLUE_PORT" \
            -e SENDINBLUE_LOGIN="$SENDINBLUE_LOGIN" \
            -e SENDINBLUE_PASSWORD="$SENDINBLUE_PASSWORD" \
            -e STRIPE_SECRET_KEY="$STRIPE_SECRET_KEY" \
            -e STRIPE_PUBLIC_KEY="$STRIPE_PUBLIC_KEY" \
            -e GgClient_ID="$GgClient_ID" \
            -e GgClient_Secret="$GgClient_Secret" \
            -e Cloudinary_NAME="$Cloudinary_NAME" \
            -e Cloudinary_API="$Cloudinary_API" \
            -e Cloudinary_SECRET="$Cloudinary_SECRET" \
            username/docker-study:latest npm test

